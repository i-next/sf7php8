/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/zrender@5.5.0/lib/core/vector.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
function n(n,t){return null==n&&(n=0),null==t&&(t=0),[n,t]}function t(n,t){return n[0]=t[0],n[1]=t[1],n}function r(n){return[n[0],n[1]]}function u(n,t,r){return n[0]=t,n[1]=r,n}function e(n,t,r){return n[0]=t[0]+r[0],n[1]=t[1]+r[1],n}function i(n,t,r,u){return n[0]=t[0]+r[0]*u,n[1]=t[1]+r[1]*u,n}function o(n,t,r){return n[0]=t[0]-r[0],n[1]=t[1]-r[1],n}function f(n){return Math.sqrt(a(n))}var c=f;function a(n){return n[0]*n[0]+n[1]*n[1]}var l=a;function h(n,t,r){return n[0]=t[0]*r[0],n[1]=t[1]*r[1],n}function v(n,t,r){return n[0]=t[0]/r[0],n[1]=t[1]/r[1],n}function M(n,t){return n[0]*t[0]+n[1]*t[1]}function m(n,t,r){return n[0]=t[0]*r,n[1]=t[1]*r,n}function x(n,t){var r=f(t);return 0===r?(n[0]=0,n[1]=0):(n[0]=t[0]/r,n[1]=t[1]/r),n}function p(n,t){return Math.sqrt((n[0]-t[0])*(n[0]-t[0])+(n[1]-t[1])*(n[1]-t[1]))}var q=p;function s(n,t){return(n[0]-t[0])*(n[0]-t[0])+(n[1]-t[1])*(n[1]-t[1])}var d=s;function b(n,t){return n[0]=-t[0],n[1]=-t[1],n}function g(n,t,r,u){return n[0]=t[0]+u*(r[0]-t[0]),n[1]=t[1]+u*(r[1]-t[1]),n}function j(n,t,r){var u=t[0],e=t[1];return n[0]=r[0]*u+r[2]*e+r[4],n[1]=r[1]*u+r[3]*e+r[5],n}function k(n,t,r){return n[0]=Math.min(t[0],r[0]),n[1]=Math.min(t[1],r[1]),n}function w(n,t,r){return n[0]=Math.max(t[0],r[0]),n[1]=Math.max(t[1],r[1]),n}export{e as add,j as applyTransform,r as clone,t as copy,n as create,q as dist,d as distSquare,p as distance,s as distanceSquare,v as div,M as dot,f as len,a as lenSquare,c as length,l as lengthSquare,g as lerp,w as max,k as min,h as mul,b as negate,x as normalize,m as scale,i as scaleAndAdd,u as set,o as sub};export default null;
